name: "Combine PRs"

# Controls when the action will run - in this case triggered manually
on:
  workflow_dispatch:
    inputs:
      branchPrefix:
        description: "Branch prefix to find combinable PRs based on"
        required: true
        default: "dependabot"
  pull_request:
    types:
      - opened
    branches: -'dependabot/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # outputs:
  #   fetch-branch-names: ${{steps.fetch-branch-names.outputs.values}}

  # pull_request_target:
  #   - type:
  #       - opened
  #   - branches:
  #       - "dependabot/**"

  # Steps represent a sequence of tasks that will be executed as part of the job
  Component_types:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        search_labels: ["ui", "api"]
    steps:
      - name: Fetch branch names
        id: fetch-prs
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let pulls
            if("${{matrix.search_labels}}" == "ui")
            pulls = await github.rest.search.issuesAndPullRequests({
              q:"dependabot+repo:AlexSCorey/dependabot-test+is:pr+label:component:ui+label:dependencies"
            });

            if("${{matrix.search_labels}}" === "api")
            pulls = await github.rest.search.issuesAndPullRequests({
              q:"dependabot+repo:AlexSCorey/dependabot-test+is:pr+label:component:api+label:dependencies"
            });

            combinedBranchName = "UIDependencyBumpCreatedbyDependbot"
            title = 'UI dependency bump created by dependabot'
            branches = [];
            prs = [];
            for (const pull of pulls.data.items) {
              prs.push('#' + pull['number'] + ' ' + pull['title']);


              const pr = await github.request("GET /repos/AlexSCorey/dependabot-test/pulls/{id}",{id:pull.number})

              console.log(pr, 'Pull request')
              branches.push(pr.data['head']['ref'])
            }

            if (branches.length == 0) {
              core.setFailed('No PRs/branches matched criteria');
              return;
            }
            if ("${{ matrix.search_labels }}" == "api"){
              combinedBranchName = 'ApiDependencyBumpCreatedByDependabot'
              title = 'API dependency bump created by dependabot'
            }



            combinedBranches = branches.join(' ')
            prStrings = prs.join('\n')
            let returnValue = {  combinedBranchName: combinedBranchName, title: title}
            return pulls
      - name: Create Combined Branches
        id: create-combined-branches
        uses: actions/github-script@v6
        script: |
          branches = []
          for(const pull of ${{ steps.fetch-prs.outputs.result}}){
            const pr = await github.request("GET /repos/AlexSCorey/dependabot-test/pulls/{id}",{id:pull.number})
            branches.push(pr.data['head']['ref'])
          }
          joinedBranches = branches.join(" ")
          return joinedBranches
      - name: Join Pr Title Strings
        id: join-pr-title-strings
        uses: actions/github-script@v6
        script: |
          prs = []
          for(const pull of ${{ steps.fetch-prs.outputs.result}}){
            const pull = await github.request("GET /repos/AlexSCorey/dependabot-test/pulls/{id}",{id:pull.number})
            prs.push('#' + pull['number'] + ' ' + pull['title']);
          }
          return prs
      - name: Create Combined Branch Name
        id: create-combined-branch-name
        uses: actions/github-script@v6
        script: |
          branchName = UIDependencyBumpCreatedbyDependbot
          if ("${{ matrix.search_labels }}" == "api"){
              combinedBranchName = 'ApiDependencyBumpCreatedByDependabot'
            }
            return branchName
      - name: Create Labels for new PR
        id: create-labels-for-new-pr
        uses: actions/github-script@v6
        script: |
          label = 'label:component:ui+label:dependencies'
          if ("${{ matrix.search_labels }}" == "api"){
              label = 'label:component:api+label:dependencies'
            }
          return label

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Creates a branch with other PR branches merged together
      - name: Created combined branch
        id: combine-branch-name
        env:
          BASE_BRANCH: devel
          BRANCHES_TO_COMBINE: ${{ steps.create-combined-branches.outputs.result }}
          COMBINE_BRANCH_NAME: ${{ steps.crete-combined-branch-name.outputs.result}}
        run: |
          echo "$BRANCHES_TO_COMBINE"
          sourcebranches="${BRANCHES_TO_COMBINE%\"}"
          sourcebranches="${sourcebranches#\"}"

          basebranch="${BASE_BRANCH%\"}"
          basebranch="${basebranch#\"}"

          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          git branch $COMBINE_BRANCH_NAME $basebranch
          git checkout $COMBINE_BRANCH_NAME
          git pull origin $sourcebranches --no-edit
          git push origin $COMBINE_BRANCH_NAME

      - name: Create Combined Pull Request
        uses: actions/github-script@v3
        env:
          PR_STRINGS: ${{ steps.join-pr-title-strings.outputs.result }}
          LABEL: ${{ matrix.search_labels }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prString = PR_STRINGS
            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\n' + {{PR_STRINGS}};
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Combined PR',
              head: ${{ env.COMBINE_BRANCH_NAME }},
              base: ${{ env.BASE_BRANCH }},
              body: body
              labels:[{{ LABEL }}]
            });
      # - name: Close PRs that were combined
      #   run: |
      #     for (const pr of '${{ steps.fetch-branch-names.outputs.prs}}') {
      #       console.log(pr)
