name: "Combine PRs"

# Controls when the action will run - in this case triggered manually
on:
  pull_request:
    types:
      - opened
    branches: -'dependabot/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  combine-prs:
    runs-on: ubuntu-latest

    pull_request_target:
      - type:
          - opened
      - branches:
          - "dependabot/**"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Fetch branch names
        id: fetch-branch-names
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pulls = await github.paginate('GET /repos/AlexSCorey/dependabot-test/pulls', {
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            branches = [];
            prs = [];
            base_branch = null;
            for (const pull of pulls) {
              const branch = pull['head']['ref'];
              console.log('Pull for branch: ' + branch);
              if (branch.startsWith('dependabot')) {
                console.log('Branch matched: ' + branch);
                statusOK = true;
                if(${{ github.event.inputs.mustBeGreen }}) {
                  console.log('Checking green status: ' + branch);
                  const statuses = await github.paginate('GET /repos/{owner}/{repo}/commits/{ref}/status', {
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: branch
                  });

                  # if(contains(github.event.pull_request.labels.*.name, 'nocombine')) {
                  #   console.log('Discarding ' + branch + ' with label ' + labelName);
                  #   statusOK = false;
                  # }
                }
                if (statusOK) {
                  console.log('Adding branch to array: ' + branch);
                  branches.push(branch);
                  prs.push('#' + pull['number'] + ' ' + pull['title']);
                  base_branch = pull['base']['ref'];
                }
              }
            }

            if (branches.length == 0) {
              core.setFailed('No PRs/branches matched criteria');
              return;
            }

            core.setOutput('base-branch', base_branch);
            core.setOutput('prs-string', prs.join('\n'));
            core.setOutput('prs', prs)
            core.setOutput('combined-branch-name', automateDependencyUpgrade)

            combined = branches.join(' ')
            console.log('Combined: ' + combined);
            return combined
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
      # Creates a branch with other PR branches merged together
      - name: Created combined branch
        id: combine-branch-name
        env:
          BASE_BRANCH: ${{ steps.fetch-branch-names.outputs.base-branch }}
          BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}
          COMBINE_BRANCH_NAME: "automateDependencyUpgrade"
        run: |
          echo "$BRANCHES_TO_COMBINE"
          sourcebranches="${BRANCHES_TO_COMBINE%\"}"
          sourcebranches="${sourcebranches#\"}"

          basebranch="${BASE_BRANCH%\"}"
          basebranch="${basebranch#\"}"

          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          git branch $COMBINE_BRANCH_NAME $basebranch
          git checkout $COMBINE_BRANCH_NAME
          git pull origin $sourcebranches --no-edit
          git push origin $COMBINE_BRANCH_NAME
      # Creates a PR with the new combined branch
      - name: Create Combined Pull Request
        uses: actions/github-script@v3
        env:
          PRS_STRING: ${{ steps.fetch-branch-names.outputs.prs-string }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prString = process.env.PRS_STRING;
            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\n' + prString;
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Combined PR',
              head: '${{ steps.fetch-branch-names.outputs.combine-branch-name }}',
              base: '${{ steps.fetch-branch-names.outputs.base-branch }}',
              body: body
            });
      # - name: Close PRs that were combined
      #   run: |
      #     for (const pr of '${{ steps.fetch-branch-names.outputs.prs}}') {
      #       console.log(pr)

