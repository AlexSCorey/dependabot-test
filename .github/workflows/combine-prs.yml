name: "Combine PRs"

# Controls when the action will run - in this case triggered manually
on:
  workflow_dispatch:
    inputs:
      branchPrefix:
        description: "Branch prefix to find combinable PRs based on"
        required: true
        default: "dependabot"
  pull_request:
    types:
      - opened
    branches: -'dependabot/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # outputs:
  #   fetch-branch-names: ${{steps.fetch-branch-names.outputs.values}}

  # pull_request_target:
  #   - type:
  #       - opened
  #   - branches:
  #       - "dependabot/**"

  # Steps represent a sequence of tasks that will be executed as part of the job
  Component_types:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        search_labels: ["ui", "api"]
    steps:
      - name: Fetch branch names
        id: fetch-prs
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let pulls
            if("${{matrix.search_labels}}" == "ui")
            pulls = await github.rest.search.issuesAndPullRequests({
              q:"dependabot+repo:AlexSCorey/dependabot-test+is:pr+label:component:ui+label:dependencies"
            });

            if("${{matrix.search_labels}}" === "api")
            pulls = await github.rest.search.issuesAndPullRequests({
              q:"dependabot+repo:AlexSCorey/dependabot-test+is:pr+label:component:api+label:dependencies"
            });

            return pulls.data.items
      - name: Create Combined Branches
        id: create-combined-branches
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            branches = []
            let base_branch
            for(const pull of ${{ steps.fetch-prs.outputs.result}}){
              const pr = await github.request("GET /repos/AlexSCorey/dependabot-test/pulls/{id}",{id:pull.number})
              branches.push(pr.data['head']['ref'])
            base_branch = pr.data['base']['ref']
            }
            core.setOutput('base-branch', base_branch);
            joinedBranches = branches.join(" ")
            return joinedBranches
      - name: Join Pr Title Strings
        id: join-pr-title-strings
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            prs = []
            for(const pull of ${{ steps.fetch-prs.outputs.result}}){
              const response = await github.request("GET /repos/AlexSCorey/dependabot-test/pulls/{id}",{id:pull.number})
              prs.push('#' + response['number'] + ' ' + response['title']);
            }
            return prs
      - name: Create Combined Branch Name
        id: create-combined-branch-name
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            branchName = 'UIDependencyBumpCreatedbyDependbot'
            if ("${{ matrix.search_labels }}" == "api"){
                combinedBranchName = 'ApiDependencyBumpCreatedByDependabot'
              }
            return branchName
      - name: Create Labels for new PR
        id: create-labels-for-new-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            label = 'label:component:ui+label:dependencies'
            if ("${{ matrix.search_labels }}" == "api"){
                label = 'label:component:api+label:dependencies'
              }
            return label

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Creates a branch with other PR branches merged together
      - name: Created combined branch
        id: combine-branch-name
        env:
          BASE_BRANCH: ${{ steps.create-combined-branches.outputs.base-branch }}
          BRANCHES_TO_COMBINE: "${{ steps.create-combined-branches.outputs.result }}"
          COMBINE_BRANCH_NAME: "${{ steps.create-combined-branch-name.outputs.result}}"
        run: |


          echo "$BRANCHES_TO_COMBINE"
          echo "check branches"
          sourcebranches="${BRANCHES_TO_COMBINE%\"}"
          sourcebranches="${sourcebranches#\"}"


          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          git branch $COMBINE_BRANCH_NAME main
          git checkout $COMBINE_BRANCH_NAME
          git pull origin ${{ steps.create-combined-branches.outputs.result}} --no-edit
          git push origin $COMBINE_BRANCH_NAME

      - name: Create Combined Pull Request
        uses: actions/github-script@v3
        env:
          PR_STRINGS: ${{ steps.join-pr-title-strings.outputs.result }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prString = PR_STRINGS
            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\n' + {{PR_STRINGS}};
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Combined PR',
              head: ${{ env.COMBINE_BRANCH_NAME }},
              base: '${{ steps.create-combined-branches.outputs.base-branch }}',
              body: body
              labels:[${{ steps.create-labels-for-new-pr.outputs.result }}]
            });
      # - name: Close PRs that were combined
      #   run: |
      #     for (const pr of '${{ steps.fetch-branch-names.outputs.prs}}') {
      #       console.log(pr)
